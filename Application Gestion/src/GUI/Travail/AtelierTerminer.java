/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.Travail;

import GUI.Atelier;
import javax.swing.JOptionPane;
import travail.Travail;

/**
 *
 * @author matteoarnone
 */
public class AtelierTerminer extends javax.swing.JDialog {

    private final Atelier Parent;
    
    /**
     * Creates new form PriseEnCharge
     * @param parent
     * @param modal
     */
    
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public AtelierTerminer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //On récupère la ref vers le parent
        Parent = (Atelier) parent;
        Parent.Log().PrintLN("Fin Travail","Ouverture");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label_TravauxAttente = new javax.swing.JLabel();
        Bouton_KO = new javax.swing.JButton();
        Bouton_OK = new javax.swing.JButton();
        Combo_Choix = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Label_TravauxAttente.setText("Terminé le Travail sur :");

        Bouton_KO.setText("Annuler");
        Bouton_KO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_KOActionPerformed(evt);
            }
        });

        Bouton_OK.setText("OK");
        Bouton_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_OKActionPerformed(evt);
            }
        });

        Combo_Choix.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pont 1", "Pont 2", "Pont 3", "Pont 4", "Sol" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Label_TravauxAttente)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Combo_Choix, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Bouton_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(Bouton_KO)))
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_TravauxAttente)
                .addGap(30, 30, 30)
                .addComponent(Combo_Choix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bouton_OK)
                    .addComponent(Bouton_KO))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Bouton_KOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_KOActionPerformed
        Parent.Log().PrintLN("Fin Travail","Fermeture");
        this.dispose();
    }//GEN-LAST:event_Bouton_KOActionPerformed

    private void Bouton_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_OKActionPerformed
        
        Travail Trav;
        
        switch(Combo_Choix.getSelectedIndex()){
            case -1:
                JOptionPane.showMessageDialog(this,"Choisissez un élément","Erreur", JOptionPane.ERROR_MESSAGE);
                break;
            
            case 0:
                Trav = Parent.getContainer().getPont1();
                if(Trav != null){
                    Parent.getContainer().getListeTravauxFini().add(Trav);
                    Parent.getContainer().setPont1(null);
                    Parent.Log().PrintLN("Fin Travail","Supression du Travail du Pont1: " + Trav);
                    
                    Parent.Log().PrintLN("Fin Travail","Fermeture");
                    this.dispose();
                    Parent.RefreshUI();
                    Parent.SaveContainer();
                }
                else{
                    JOptionPane.showMessageDialog(this,"Le Pont1 est Vide.","Erreur", JOptionPane.ERROR_MESSAGE);
                }
                break;
            
            case 1:
                Trav = Parent.getContainer().getPont2();
                if(Trav != null){
                    Parent.getContainer().getListeTravauxFini().add(Trav);
                    Parent.getContainer().setPont2(null);
                    Parent.Log().PrintLN("Fin Travail","Supression du Travail du Pont2: " + Trav);
                    
                    Parent.Log().PrintLN("Fin Travail","Fermeture");
                    this.dispose();
                    Parent.RefreshUI();
                    Parent.SaveContainer();
                }
                else{
                    JOptionPane.showMessageDialog(this,"Le Pont2 est Vide.","Erreur", JOptionPane.ERROR_MESSAGE);
                }
                break;
            
            case 2:
                Trav = Parent.getContainer().getPont3();
                if(Trav != null){
                    Parent.getContainer().getListeTravauxFini().add(Trav);
                    Parent.getContainer().setPont3(null);
                    Parent.Log().PrintLN("Fin Travail","Supression du Travail du Pont3: " + Trav);
                    
                    Parent.Log().PrintLN("Fin Travail","Fermeture");
                    this.dispose();
                    Parent.RefreshUI();
                    Parent.SaveContainer();
                }            
                else{
                    JOptionPane.showMessageDialog(this,"Le Pont3 est Vide.","Erreur", JOptionPane.ERROR_MESSAGE);
                }
                break;
            
            case 3:
                Trav = Parent.getContainer().getPont4();
                if(Trav != null){
                    Parent.getContainer().getListeTravauxFini().add(Trav);
                    Parent.getContainer().setPont4(null);
                    Parent.Log().PrintLN("Fin Travail","Supression du Travail du Pont4: " + Trav);
                    
                    Parent.Log().PrintLN("Fin Travail","Fermeture");
                    this.dispose();
                    Parent.RefreshUI();
                    Parent.SaveContainer();
                }               
                else{
                    JOptionPane.showMessageDialog(this,"Le Pont4 est Vide.","Erreur", JOptionPane.ERROR_MESSAGE);
                }
                break;
            
            case 4:
                Trav = Parent.getContainer().getSol();
                if(Trav != null){
                    Parent.getContainer().getListeTravauxFini().add(Trav);
                    Parent.getContainer().setSol(null);
                    Parent.Log().PrintLN("Fin Travail","Supression du Travail du Sol: " + Trav);
                    
                    Parent.Log().PrintLN("Fin Travail","Fermeture");
                    this.dispose();
                    Parent.RefreshUI();
                    Parent.SaveContainer();
                }
                else{
                    JOptionPane.showMessageDialog(this,"Le Sol est Vide.","Erreur", JOptionPane.ERROR_MESSAGE);
                }
                break;
        }
    }//GEN-LAST:event_Bouton_OKActionPerformed
        
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bouton_KO;
    private javax.swing.JButton Bouton_OK;
    private javax.swing.JComboBox<String> Combo_Choix;
    private javax.swing.JLabel Label_TravauxAttente;
    // End of variables declaration//GEN-END:variables
}