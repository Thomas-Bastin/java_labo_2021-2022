/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI.Travail;

import GUI.Atelier;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import travail.Travail;

/**
 *
 * @author matteoarnone
 */
public class AtelierPriseEnCharge extends javax.swing.JDialog {

    private final Atelier Parent;
    
    /**
     * Creates new form PriseEnCharge
     * @param parent
     * @param modal
     */
    
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public AtelierPriseEnCharge(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //On récupère la ref vers le parent
        Parent = (Atelier) parent;
        Parent.Log().PrintLN("Prise en Charge d'un Travail","Ouverture");
        
        RefreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Label_TravauxAttente = new javax.swing.JLabel();
        Scroll_TableListeTravaux = new javax.swing.JScrollPane();
        Table_ListeTravaux = new javax.swing.JTable();
        Radio_Pont = new javax.swing.JRadioButton();
        ComboBox_Number = new javax.swing.JComboBox<>();
        Radio_Sol = new javax.swing.JRadioButton();
        Bouton_OK = new javax.swing.JButton();
        Bouton_KO = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Label_TravauxAttente.setText("Travaux en attente :");

        Table_ListeTravaux.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type voiture", "Immatriculation", "Propriétaire", "Travail", "Remarques"
            }
        ));
        Scroll_TableListeTravaux.setViewportView(Table_ListeTravaux);

        buttonGroup1.add(Radio_Pont);
        Radio_Pont.setText("Pont");

        ComboBox_Number.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        buttonGroup1.add(Radio_Sol);
        Radio_Sol.setText("Sol");

        Bouton_OK.setText("OK");
        Bouton_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_OKActionPerformed(evt);
            }
        });

        Bouton_KO.setText("Annuler");
        Bouton_KO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_KOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Radio_Pont)
                        .addGap(11, 11, 11)
                        .addComponent(ComboBox_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Bouton_OK, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Radio_Sol, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Bouton_KO, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(285, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Scroll_TableListeTravaux, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_TravauxAttente))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_TravauxAttente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Scroll_TableListeTravaux, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_Number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Radio_Pont)
                    .addComponent(Radio_Sol))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bouton_KO)
                    .addComponent(Bouton_OK))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("UnusedAssignment")
    private void Bouton_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_OKActionPerformed
        
        DefaultTableModel model = (DefaultTableModel) Table_ListeTravaux.getModel();
        int selected;
        
        //Si rien coché, alors on ne fait rien
        if((selected = Table_ListeTravaux.getSelectedRow()) == -1 && buttonGroup1.getSelection() == null)
        {
            JOptionPane.showMessageDialog(this,"Veuillez sélectionner un emplacement de Travail et un Travail.","Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        
        //Si un morceau de la liste a été sélectionner, mais qu'aucunne option a été choisie.
        if(buttonGroup1.getSelection() == null){
            JOptionPane.showMessageDialog(this,"Veuillez sélectionner un emplacement de Travail","Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        
        if((selected = Table_ListeTravaux.getSelectedRow()) == -1)
        {
            JOptionPane.showMessageDialog(this,"Veuillez sélectionner un Travail","Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(Radio_Pont.isSelected())
        {
            //On récupère le type de pont choisi
            switch(ComboBox_Number.getSelectedItem().toString()){
                case "1":
                    if(Parent.getContainer().IsPont1Free()){
                        //Suppression du travail de la liste et ajout sur le pont1
                        Travail t = (Travail) Parent.getContainer().getListeTravaux().remove(selected);
                        Parent.getContainer().setPont1(t);
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Prise en charge du travail sur le Pont1: " + t);
                        
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
                        this.dispose();
                        
                        Parent.RefreshUI();
                        Parent.SaveContainer();
                    }
                    else
                        JOptionPane.showMessageDialog(this,"Le Poste Choisi est déjà utilisé","Erreur", JOptionPane.ERROR_MESSAGE);
                    break;

                case "2":
                    if(Parent.getContainer().IsPont2Free()){
                        //Suppression du travail de la liste et ajout sur le pont1
                        Travail t = (Travail) Parent.getContainer().getListeTravaux().remove(selected);
                        Parent.getContainer().setPont2(t);
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Prise en charge du travail sur le Pont2: " + t);
                        
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
                        this.dispose();
                        Parent.RefreshUI();
                        Parent.SaveContainer();
                    }
                    else
                        JOptionPane.showMessageDialog(this,"Le Poste Choisi est déjà utilisé","Erreur", JOptionPane.ERROR_MESSAGE);
                    break;

                case "3":
                    if(Parent.getContainer().IsPont3Free()){
                        //Suppression du travail de la liste et ajout sur le pont1
                        Travail t = (Travail) Parent.getContainer().getListeTravaux().remove(selected);
                        Parent.getContainer().setPont3(t);
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Prise en charge du travail sur le Pont3: " + t);
                        
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
                        this.dispose();
                        Parent.RefreshUI();
                        Parent.SaveContainer();
                    }
                    else
                        JOptionPane.showMessageDialog(this,"Le Poste Choisi est déjà utilisé","Erreur", JOptionPane.ERROR_MESSAGE);
                    break;

                case "4":
                    if(Parent.getContainer().IsPont4Free()){
                        //Suppression du travail de la liste et ajout sur le pont1
                        Travail t = (Travail) Parent.getContainer().getListeTravaux().remove(selected);
                        Parent.getContainer().setPont4(t);
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Prise en charge du travail sur le Pont4: " + t);
                        
                        Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
                        this.dispose();
                        Parent.RefreshUI();
                        Parent.SaveContainer();
                    }
                    else
                        JOptionPane.showMessageDialog(this,"Le Poste Choisi est déjà utilisé","Erreur", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }
        
        if(Radio_Sol.isSelected())
        {
            if(Parent.getContainer().IsSolFree()){
                //Suppression du travail de la liste et ajout sur le pont1
                Travail t = (Travail) Parent.getContainer().getListeTravaux().remove(selected);
                Parent.getContainer().setSol(t);
                Parent.Log().PrintLN("Prise en Charge d'un Travail","Prise en charge du travail sur le Sol: " + t);        
                
                Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
                this.dispose();
                Parent.RefreshUI();
                Parent.SaveContainer();
            }
            else
                JOptionPane.showMessageDialog(this,"Le Poste Choisi est déjà utilisé","Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Bouton_OKActionPerformed

    private void Bouton_KOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_KOActionPerformed
        Parent.Log().PrintLN("Prise en Charge d'un Travail","Fermeture");
        this.dispose();
    }//GEN-LAST:event_Bouton_KOActionPerformed

    public void RefreshTable()
    {
        //On récupère le modèle de la table
        DefaultTableModel model = (DefaultTableModel) Table_ListeTravaux.getModel();
        for(int i = 0 ; i < Parent.getContainer().getListeTravaux().size() ; i++)
        {
            model.addRow(((Travail) Parent.getContainer().getListeTravaux().get(i)).toVector());
        }
        Table_ListeTravaux.setModel(model);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bouton_KO;
    private javax.swing.JButton Bouton_OK;
    private javax.swing.JComboBox<String> ComboBox_Number;
    private javax.swing.JLabel Label_TravauxAttente;
    private javax.swing.JRadioButton Radio_Pont;
    private javax.swing.JRadioButton Radio_Sol;
    private javax.swing.JScrollPane Scroll_TableListeTravaux;
    private javax.swing.JTable Table_ListeTravaux;
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}